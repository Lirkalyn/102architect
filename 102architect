#!/usr/bin/env python3
##
## EPITECH PROJECT, 2019
## 102architect.py
## File description:
## a program to mimic architect-desu
##

import sys
import math

if len(sys.argv) > 4:
    res_x = 0
    res_y = 0
    i = 3
    nbr_arg = 0
    array2 = []
    while i < len(sys.argv):
        array = [0, 0, 0, 0, 0, 0, 0, 0, 1]
        if (sys.argv[i] == "-t"):
            tmp = int(sys.argv[i + 1])
            tmp2 = int(sys.argv[i + 2])
            print ("Translation along vector (%d, %d)" % (tmp, tmp2))
            array[0] = 1
            array[2] = tmp
            array[4] = 1
            array[5] = tmp2
            res_x = int(sys.argv[i - 2]) + tmp
            res_y = int(sys.argv[i - 1]) + tmp2
            i += 2
            nbr_arg += 1
        elif (sys.argv[i] == "-z"):
            tmp = int(sys.argv[i + 1])
            tmp2 = int(sys.argv[i + 2])
            print ("Scaling by factors %d and %d" % (tmp , tmp2))
            array[0] = tmp
            array[4] = tmp2
            res_x = int(sys.argv[i - 2]) * tmp
            res_y = int(sys.argv[i - 1]) * tmp2
            i += 2
            nbr_arg += 1
        elif (sys.argv[i] == "-r"):
            tmp = int(sys.argv[i + 1])
            print ("Rotation by a %d degree angle" % (tmp))
            array[0] = round(math.cos(math.radians(tmp)), 8)
            array[1] = round(-math.sin(math.radians(tmp)), 8)
            array[3] = round(math.sin(math.radians(tmp)), 8)
            array[4] = round(math.cos(math.radians(tmp)), 8)
            res_x = ((array[0] * int(sys.argv[i - 2])) + (array[1] * int(sys.argv[i - 1])))
            res_y = ((array[3] * int(sys.argv[i - 2])) + (array[4] * int(sys.argv[i - 1])))
            i += 2
            nbr_arg += 1
        if (nbr_arg == 1):
            for a in array:
                array2.append(a)
        i += 1
    print ("%.2f %.2f %.2f" % (array2[0], array2[1], array2[2]))
    print ("%.2f %.2f %.2f" % (array2[3], array2[4], array2[5]))
    print ("%.2f %.2f %.2f" % (array2[6], array2[7], array2[8]))
    print ("(%.2f, %.2f) => (%.2f, %.2f)" % (int(sys.argv[1]), int(sys.argv[2]), res_x, res_y))
else:
	sys.exit(84)